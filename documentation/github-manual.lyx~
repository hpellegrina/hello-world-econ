#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{setspace}
\usepackage[bottom]{footmisc}
\usepackage{amsfonts}
\usepackage{pdflscape}
\usepackage{amsmath}
\usepackage{array}
\usepackage{bm}
\usepackage{mathptmx}
\usepackage{setspace}

\DeclareMathOperator{\sgn}{sgn}
\DeclareMathOperator{\Var}{Var}
\DeclareMathOperator{\Corr}{Corr}
\DeclareMathOperator{\Cov}{Cov}
\DeclareMathOperator{\E}{E}
\DeclareMathOperator{\logit}{logit}
\DeclareMathOperator{\I}{I}

\DeclareMathOperator*{\argmax}{arg\,max} 

\definecolor{blue}{RGB}{40, 50, 180}
\usepackage[noindentafter]{titlesec}
\end_preamble
\use_default_options true
\begin_modules
theorems-std
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "times" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family rmdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing onehalf
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\pdf_quoted_options "linkcolor=blue, urlcolor=blue, citecolor=blue"
\papersize custom
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plainnat
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
A Brief Introduction to GitHub for Social Scientists using Stata and Dropbox
\begin_inset Foot
status open

\begin_layout Plain Layout
The purpose of this material is to serve just as an introduction to Github.
 I hope that this material can be useful for Social Scientists who are trying
 to integrate Github with Dropbox for the first time.
 This document should not be considered as representative of high standards
 of project management! For an advanced template of project management using
 GitHub, see the material here 
\begin_inset CommandInset href
LatexCommand href
name "click here"
target "https://github.com/gslab-econ/template"
literal "false"

\end_inset

.
 We thank Yaw Nyarko and Martin Smit for comments.
 Contact: heitor.pellegrina@nyu.edu or andres.fajardo@nyu.edu.
\end_layout

\end_inset


\end_layout

\begin_layout Author
Heitor S.
 Pellegrina 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 Andres F.
 Fajardo
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
GitHub is a widely used online platform that computer scientists use to
 keep track of their codes and to collaborate on their projects.
 The word GitHub is the combination of Git and Hub.
 Git is a version control system that stores all the previous versions of
 files within a project.
 With Git, programmers can check what has changed in their codes and when
 those changes took place.
 They also have the ability to restore previous versions of their projects
 when they see fit.
 GitHub is a web-based repository that uses the Git system to save the complete
 history of a project in the cloud.
 Since everything is in the cloud, researches can collaborate on specific
 projects by sharing the changes they make on their local machines via the
 online repository.
\end_layout

\begin_layout Subsection
Why should I use GitHub+Dropbox instead of just using Dropbox?
\end_layout

\begin_layout Standard
\noindent
Dropbox is a great resource for teamwork.
 It allows many people to work on the same project and everything is automatical
ly synchronized across computers.
 However, as projects expand in terms of size and collaborators, one may
 run into problems.
 First, if you have used Dropbox to work with many collaborators you probably
 noticed the creation of 
\begin_inset Quotes eld
\end_inset

conflict
\begin_inset Quotes erd
\end_inset

 copies.
 This happens when Dropbox is not sure which version it should use because
 there is more than one synchronization happening at the same time.
 As we explain below, GitHub tends to avoid this problem because files are
 not automatically synchronized.
 Second, Dropbox does not have a complete system to track the specific changes
 that are made across versions of a code.
 If something changes, we do not know who changed a code and what exactly
 they changed in it.
 GitHub has an interface that makes it easy to identify these changes.
 Third, if we want to restore previous versions of a project, GitHub can
 do it quickly, but with Dropbox, we can only bring back specific files
 one at a time.
 While some of these problems may be more likely to appear in large projects
 (imagine writing the codes for facebook, for example), as large empirical
 projects become more frequent in Economics, we believe that the use of
 GitHub will inevitably become more frequent as well.
 The main cost of using GitHub is that you have to be much more systematic
 with your work, since you have to manually synchronize your changes with
 the cloud.
\end_layout

\begin_layout Subsection
What is the difference between Dropbox and GitHub?
\end_layout

\begin_layout Standard
The main difference between Dropbox and GitHub is that now we have an intermedia
ry step for the synchronization of files called
\emph on
 
\begin_inset Quotes eld
\end_inset

commit
\begin_inset Quotes erd
\end_inset


\emph default
.
 In Dropbox, we have
\begin_inset Formula 
\begin{align*}
\text{Master Repo (on the web)} & \iff\text{Local Repo (in your computer)},
\end{align*}

\end_inset

where Master Repository is the main copy of a project that is stored in
 the cloud and Local Repository is a copy of the Master Repository that
 you keep in your computer.
 Changes made by a collaborator on their local repository are automatically
 synchronized with the Master Repository and, in turn, with all collaborators'
 local repositories.
 Therefore, a single mistake by one collaborator can spread across all local
 repositories, and Dropbox lacks the capabilities to identify when exactly
 things went astray or to restore to a past working version of the project
 with ease.
 With Git, we have an intermediary step called commit:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\text{Master Repo (on the web)}\iff\text{Commit}\iff\text{Local Repo (in your computer)}
\]

\end_inset

The way how synchronization works with Github is as follows.
 You first download the Master repository to your local machine.
 If it is the first time that you are downloading a project, you use a process
 called 
\emph on

\begin_inset Quotes eld
\end_inset

clone
\begin_inset Quotes erd
\end_inset

.

\emph default
 If you are just updating the project to your local repo, you use a process
 called 
\emph on

\begin_inset Quotes eld
\end_inset

pull
\begin_inset Quotes erd
\end_inset


\emph default
.
 Both processes will download the up-to-date version of the project to your
 computer.
 After you make changes to the files, you can then load them to this intermediar
y step called commit using a process called
\emph on
 
\begin_inset Quotes eld
\end_inset

stage
\begin_inset Quotes erd
\end_inset

 
\emph default
or
\emph on
 
\begin_inset Quotes eld
\end_inset

add
\begin_inset Quotes erd
\end_inset


\emph default
.
 Once you added everything, you use a process called 
\begin_inset Quotes eld
\end_inset


\emph on
commit
\emph default

\begin_inset Quotes erd
\end_inset

, which basically packages all the 
\begin_inset Quotes eld
\end_inset


\emph on
adds
\emph default

\begin_inset Quotes erd
\end_inset

 that you made into a bundle of 
\begin_inset Quotes eld
\end_inset

approved changes
\begin_inset Quotes erd
\end_inset

.
 You can upload this commit to the cloud using a process called 
\begin_inset Quotes eld
\end_inset


\emph on
push
\emph default

\begin_inset Quotes erd
\end_inset

.
 GitHub keeps track of all the versions of the project for every commit.
 If someone makes a mistake, we can easily go back to the version of the
 project that existed before the commit that uploaded the mistake to the
 Master Repository.
\end_layout

\begin_layout Subsection
Can I use GitHub as a repository for my datasets?
\end_layout

\begin_layout Standard
GitHub is a tool for keeping track of codes, and it is not supposed to be
 a repository for datasets.
 This is why integrating Dropbox with Github is useful.
 GitHub can keep track of the codes of a project and light files (figures,
 tables and pdfs), and collaborators can share large data files using Dropbox.
\end_layout

\begin_layout Subsection
How do we integrate Dropbox with GitHub in a local machine?
\begin_inset CommandInset label
LatexCommand label
name "subsec:How-we-integrate"

\end_inset


\end_layout

\begin_layout Standard
We integrate Dropbox with GitHub in a local machine as follows.
 For each project, we create a main folder that is tracked by GitHub, and
 which is a copy of the Master Repository online.
 Within this tracked folder, we create subfolders that are connected to
 external folders in the local machine that are synchronized with Dropbox.
 We establish this connection by creating symbolic links, which are basically
 shortcuts to a folder.
\begin_inset Foot
status open

\begin_layout Plain Layout
See this 
\begin_inset CommandInset href
LatexCommand href
name "link"
target "https://github.com/git-for-windows/git/wiki/Symbolic-Links"
literal "false"

\end_inset

 for a helpful review of symbolic links.
 
\end_layout

\end_inset

 Given that the symbolic links target folders that are external to the main
 folder, GitHub will not keep track of the data files.
 See the picture in Appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Big-Picture"
plural "false"
caps "false"
noprefix "false"

\end_inset

 for a illustration of this organization.
 Using this system, when we write our codes in Stata and any other program,
 we can reference to the 
\begin_inset Quotes eld
\end_inset

shortcut
\begin_inset Quotes erd
\end_inset

 folder to open external datasets.
 
\end_layout

\begin_layout Subsection
Prerequisites for this manual
\end_layout

\begin_layout Standard
Before you move forward, make sure that you do the following
\end_layout

\begin_layout Itemize
Go to GitHub and set up an account (
\begin_inset CommandInset href
LatexCommand href
name "click here"
target "https://github.com/"
literal "false"

\end_inset

).
\end_layout

\begin_layout Itemize
Follow their introduction guide.
\end_layout

\begin_layout Itemize
Go to Git website and install git (
\begin_inset CommandInset href
LatexCommand href
name "click here"
target "https://git-scm.com/book/en/v2/Getting-Started-Installing-Git"
literal "false"

\end_inset

).
\end_layout

\begin_layout Subsubsection
For Windows Users - Installing Git and using Git BASH
\end_layout

\begin_layout Standard
After downloading the installation file for Git, execute the installer and
 select the options as they appear in Appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Windows-installation-screenshots"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
If you use Windows, you can use a tool called Git BASH to work with the
 same commands that you would use if you had a Mac.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
You may see references to *NIX on the internet.
 This is a reference to operating systems that are based on UNIX.
\end_layout

\end_inset

 When this manual asks you to use 'the terminal', you should use Git BASH
 if you have Windows.
 There will be warnings when different commands are needed if working on
 a Windows machine.
\end_layout

\begin_layout Section
Synchronization using GitHub
\end_layout

\begin_layout Standard
There are two ways to synchronize your files with the master repository.
 First, you can use a software called GitHub Desktop.
 This is a software where you can 
\begin_inset Quotes eld
\end_inset

point-and-click
\begin_inset Quotes erd
\end_inset

 your way through synchronization.
 Second, you can use the Terminal in Mac (or the Command Prompt in Windows,
 see below).
 The Terminal may seem scary at first, but, in practice, you do not have
 to be a sophisticated programmer to use it.
 There are just a few commands that you use for your daily work.
 We see two benefits in learning how to type the commands in Terminal.
 First, whenever you have a question about how to use Git, the answers posted
 online by other users will most likely involve using the Terminal.
 Second, there are some functionalities that we were not able to obtain
 with the graphical interface.
\end_layout

\begin_layout Subsection
Basic commands (MAC)
\end_layout

\begin_layout Itemize

\emph on
ls 
\emph default
(this command will 
\series bold
list
\series default
 the files in the current directory)
\end_layout

\begin_layout Itemize

\emph on
cd Dropbox
\emph default
 (this command will change the 
\series bold
current directory
\series default
 and enter the folder called 
\begin_inset Quotes eld
\end_inset

Dropbox
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Itemize

\emph on
cd ..
 
\emph default
(this will go a folder back in the hierarchy of folders)
\end_layout

\begin_layout Itemize

\emph on
mkdir projects-git 
\emph default
(this command will 
\series bold
make a directory 
\series default
called projects-git)
\end_layout

\begin_layout Itemize

\emph on
git clone https://github.com/hpellegrina/hello-world 
\emph default
(this command will make a clone of the online repository called hello-world
 to the current directory in your terminal)
\end_layout

\begin_layout Itemize

\emph on
git add table_1_summary_stat.do 
\emph default
(this command will add the do.file called 
\emph on
table_1_summary_stat.do
\emph default
 to the commit that you are preparing)
\end_layout

\begin_layout Itemize

\emph on
git remove table_1_summary_stat.do 
\emph default
(this command will remove 
\emph on
table_1_summary_stat.do
\emph default
 from the commit)
\end_layout

\begin_layout Itemize

\emph on
git add -A
\emph default
 
\emph on
-m 
\begin_inset Quotes eld
\end_inset

Adding all files
\begin_inset Quotes erd
\end_inset


\emph default
 (this command 
\series bold
adds
\series default
 to the commit all the new files that you have and creates a 
\series bold
message
\series default
 associated with the commit saying 
\begin_inset Quotes eld
\end_inset

Adding all files
\begin_inset Quotes erd
\end_inset

)
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
When you are looking throught the commits of a project, you can see the
 list of commits and the messages associated with each of them
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\emph on
git commit -m 
\begin_inset Quotes eld
\end_inset

Adding table_1_summary_stat.do
\begin_inset Quotes erd
\end_inset

 
\emph default
(this command will commit the changes that you made to the folder, the phrase
 inside the quotation marks is the comment that you are going to attach
 to your commit)
\end_layout

\begin_layout Itemize

\emph on
git push 
\emph default
(this command will 
\series bold
push
\series default
 the commit that you prepared that is still in your computer to the git
 cloud)
\end_layout

\begin_layout Itemize

\emph on
git pull 
\emph default
(this command will 
\series bold
pull
\series default
 the current version of the project to your desktop)
\end_layout

\begin_layout Itemize

\emph on
git status 
\emph default
(will show you the modifications/deletions that you made in your local repo)
\end_layout

\begin_layout Subsection
How a typical day of work looks like?
\end_layout

\begin_layout Itemize
You start by going to your project's local folder in a terminal window and
 download (pull) any changes your collaborators may have uploaded to the
 online repository.
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

$ cd local/path/to/the/project
\end_layout

\begin_layout Plain Layout

$ git pull
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
You work on a task, i.e.
 you make changes to the project's files.
\end_layout

\begin_layout Itemize
You check the changes you have made and select (add) the changes you want
 to approve into a bundle of changed files.
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

$ git status
\end_layout

\begin_layout Plain Layout

$ git add -A
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
You approve (commit) the changes and add a comment so that your collaborators
 know what the changes consist in.
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

$ git commit -m 
\begin_inset Quotes eld
\end_inset

Issue #1: added table_1_summary_stat.do
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
You work on other tasks and make additional commits (steps 3 and 4 above).
\end_layout

\begin_layout Itemize
You upload all the commits to the online repository.
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

$ git push
\end_layout

\end_inset


\end_layout

\begin_layout Section
Hello-World! I'm an Economist!
\end_layout

\begin_layout Standard
We will be following the tradition in computer science.
 Below you will have your first commits using GitHub, Stata and Dropbox.
\end_layout

\begin_layout Subsection
Exercise #0 - Getting started.
\end_layout

\begin_layout Standard
In this exercise you will set things up so that you have access to the files
 needed for the subsequent exercises.
\end_layout

\begin_layout Enumerate
Before you start, make sure that you have a GitHub account and that you
 have installed Git into your machine.
 To double check that Git is installed, go to terminal and type the following
 command.
 If it is already installed, it will show a list of Git commands.
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

$ git
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Link git to your GitHub account.
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

$ git config --global user.email your@email.address
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Make a copy of 
\series bold
hello-world-econ 
\series default
into your computer.
 This will bring the files needed for this exercise.
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

$ cd /sample/path/for/files
\end_layout

\begin_layout Plain Layout

$ git clone https://github.com/hpellegrina/hello-world-econ
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
There is a folder called 
\series bold
my-hello-world-econ-shared 
\series default
in 
\series bold
hello-world-econ.

\series default
 Copy this folder into your Dropbox folder.
 This is the folder you will use to share data, documentation, etc., with
 your collaborators.
\end_layout

\begin_layout Subsection
Exercise #1 - Using GitHub to track codes.
\end_layout

\begin_layout Standard
In this exercise, you will use GitHub to track the codes and graphs of a
 new project:
\series bold
 my-hello-world-econ
\series default
.

\series bold
 
\series default
You will (1) create a remote repository of your project in GitHub, (2) configure
 git so that that it ignores *.dta Stata files, (3) set up a local repository
 to work on your project, and (4) upload the local changes to the online
 repository.
 
\end_layout

\begin_layout Enumerate
Go to your account in 
\begin_inset CommandInset href
LatexCommand href
name "github.com"
target "https://github.com"
literal "false"

\end_inset

.
 Create a repository called 
\series bold
my-hello-world-econ 
\series default
and click on 
\begin_inset Quotes eld
\end_inset

initialize this repository with a README
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Enumerate
In the website of your repository, click on 'Create new file' to create
 a file called 
\series bold
.gitignore 
\series default
in the main folder of the project
\series bold
.

\series default
 Input the content below in this file and click on 'Commit changes to the
 master branch'.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Changes made to 
\series bold
.gitignore 
\series default
will only apply to untracked files.
 If there are any files within these folders that git is already tracking,
 you will need to untrack them first.
 This can be the case if, for example, you already added a file to a commit.
 
\begin_inset CommandInset href
LatexCommand href
name "Here"
target "http://www.codeblocq.com/2016/01/Untrack-files-already-added-to-git-repository-based-on-gitignore/"
literal "false"

\end_inset

 is an example of how to untrack files.
\end_layout

\end_inset

 
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},tabsize=3"
inline false
status open

\begin_layout Plain Layout

1.
 # Ignore all *.dta files in the project
\end_layout

\begin_layout Plain Layout

2.
 */.dta
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Open a terminal window and use the following commands to create a local
 copy of the repository created in the step above.
 This will create a folder called 
\series bold
my-hello-world-econ
\series default
 in your computer.
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

$ cd /sample/path/for/your/project
\end_layout

\begin_layout Plain Layout

$ git clone https://github.com/yourusername/my-hello-world-econ
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
There is a
\series bold
 my-hello-world-econ-contents.zip
\series default
 file in 
\series bold
hello-world-econ
\series default
 (the repository you copied in Exercise #0).
 Extract the 
\bar under
contents
\bar default
 of this folder into 
\series bold
my-hello-world-econ
\series default
.
 Your local project folder should now have two subfolders: 
\series bold
analysis 
\series default
and 
\series bold
data
\series default
.
\end_layout

\begin_layout Enumerate
The files you just added to 
\series bold
my-hello-world-econ
\series default
 are local changes you made to the project.
 We will now update your online repository so that it incorporates these
 changes.
 First, let's add the changes to the 
\begin_inset Quotes eld
\end_inset

commit
\begin_inset Quotes erd
\end_inset

 stage (the second command below checks if the changes were properly added).
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

$ git add -A
\end_layout

\begin_layout Plain Layout

$ git status
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Create a commit and add a comment that explains what you are uploading.
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

$ git commit -m 
\begin_inset Quotes eld
\end_inset

Copied the contents of my-hello-world-econ-contents
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Push the commit to the online repository.
 
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

$ git push
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Go to 
\begin_inset CommandInset href
LatexCommand href
name "github.com"
target "https://github.com"
literal "false"

\end_inset

 and check that the changes are now displayed in your online repository.
\end_layout

\begin_layout Subsection
Exercise # 2 - Using Dropbox to access data inputs.
\end_layout

\begin_layout Standard
Now, we are going to set up the folders that are connected to Dropbox using
 symbolic links as explained in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:How-we-integrate"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 We will (1) clean a dataset, (2) generate a figure and (3) upload your
 changes to the online repository.
\end_layout

\begin_layout Enumerate
As always, you must start by updating your local repository to download
 (
\emph on
pull
\emph default
) any changes (
\emph on
commits
\emph default
) made to the online repository by your collaborators.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
See 
\begin_inset CommandInset href
LatexCommand href
name "this"
target "http://www.dynare.org/houtan/handouts/git_1_new_with_smartgit.pdf"
literal "false"

\end_inset

 for a discussion on pull vs fetch and rebase.
 
\end_layout

\end_inset


\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

$ cd your/path/to/my-hello-world-econ
\end_layout

\begin_layout Plain Layout

$ git pull
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
You will now create a folder for the data input that will be connected to
 an external folder.
 Go to the folder 
\series bold
data
\series default
 in your project's data folder and create a symbolic link called 
\series bold
input
\series default
 using the following commands.
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

$ cd your/path/to/my-hello-world-econ/data/
\end_layout

\begin_layout Plain Layout

$ ln -s your/path/to/Dropbox/my-hello-world-econ-shared/data/input input
\end_layout

\end_inset

 If you are using Windows, 
\bar under
open the Command Prompt as an administrator (not Git BASH)
\bar default
 and use the following commands.
 Note that we are using backslashes now and not forward slashes.
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

>> cd your
\backslash
path
\backslash
to
\backslash
my-hello-world-econ
\backslash
data
\backslash

\end_layout

\begin_layout Plain Layout

>> mklink /D input your
\backslash
path
\backslash
to
\backslash
Dropbox
\backslash
my-hello-world-econ-shared
\backslash
data
\backslash
input
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Open the file 
\series bold
make_urbanpop_dta.do
\series default
.
 Edit the path in the third line so that it points to its folder, that is,
 to 
\series bold
my-hello-world-econ/data/code
\series default
.
 Save and run the do-file.
 This step creates a cleaned dataset called 
\series bold
finaldata.dta
\series default
.
\end_layout

\begin_layout Enumerate
Open the file 
\series bold
fig_va_urbanization.do
\series default
.
 Edit the path in the third line so that it points to its folder.
 Save and run the do-file.
 This step creates a figures called 
\series bold
fig_hello_world.png
\series default
.
\end_layout

\begin_layout Enumerate
You will now upload (
\emph on
push
\emph default
) the changes you have made to your project to the online repository.
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

$ git add -A
\end_layout

\begin_layout Plain Layout

$ git commit -m 
\begin_inset Quotes eld
\end_inset

Done with my first analysis!
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Plain Layout

$ git push
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Go to 
\begin_inset CommandInset href
LatexCommand href
name "github.com"
target "https://github.com"
literal "false"

\end_inset

 and check that the changes in the online repository do not include the
 creation of *.dta files.
\end_layout

\begin_layout Standard
You have made your first contribution to my-hello-world-econ! Note that
 all the files in the external folder are not tracked by GitHub.
 Also, because we configured git to ignore *.dta files, 
\series bold
finaldata.dta
\series default
 is not uploaded to the online repository.
 
\end_layout

\begin_layout Subsection
(EXTRA) Using Python to create symbolic links.
\end_layout

\begin_layout Standard
In Exercise #2 you created symbolic links to connect your project to the
 the data inputs shared by collaborators on Dropbox.
 In projects with several datasets, it may be tedious to create a large
 number of symbolic links in the terminal when cloning a repository for
 the first time.
 We provide a Python script that checks all the data sources inside a major
 data folder and create symbolic links to each of them.
 This code works with the organization of folders presented in Appendix
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Big-Picture"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 To run this code, open the terminal and type the commands below.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

$ cd your/path/to/my-hello-world-econ
\end_layout

\begin_layout Plain Layout

$ python3 input_slinks.py 
\begin_inset Quotes eld
\end_inset

your/path/to/project
\begin_inset Quotes erd
\end_inset

 
\begin_inset Quotes eld
\end_inset

your/path/to/project-data
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Additional Features for Teamwork
\end_layout

\begin_layout Subsection
Issues
\end_layout

\begin_layout Standard
A useful tool for the organization of tasks in GitHub is the use of 
\begin_inset Quotes eld
\end_inset

Issues
\begin_inset Quotes erd
\end_inset

.
 Any collaborator in a project can create a new issue on the website associated
 with a repository and link their commits with these issues.
 For example, one can go to a repository and create an issue such as 
\begin_inset Quotes eld
\end_inset

Add clustered standard errors in table 1
\begin_inset Quotes erd
\end_inset

.
 When the issue is created it comes with a number.
 Let's say this number is 1.
 When someone in the project commits something related to the issue, this
 person can directly link his commit with the issue by writing in the beginning
 of the message #1.
 When you do so, the website will display a small notification under the
 issue with the user who updated the issue and also what was added there.
 You can also assign issues to specific people in the project.
 
\end_layout

\begin_layout Subsection
Branches
\end_layout

\begin_layout Standard
Another useful tool for teamwork is the creation of branches.
 Let's say that you want to test the results from your paper using a restricted
 sample, but you do not want to affect your current results because it is
 possible that the restricted sample contains problems that you may find
 while working on it.
 In this case, you can create a 
\begin_inset Quotes eld
\end_inset


\emph on
branch
\emph default

\begin_inset Quotes erd
\end_inset

.
 This is a parallel repo on the cloud that your co-authors can use.
 In that case, we have
\begin_inset Formula 
\begin{align*}
\text{Master Repo (on the web)} & \iff\text{Commit}\iff\text{Local Repo (in your computer)}\\
\uparrow\downarrow\\
\text{Branch Repo (on the web)} & \iff\text{Commit}\iff\text{Local Repo (in your computer)}
\end{align*}

\end_inset

If the new sample works well, you may merge the branch with the master repo.
 If not, you can just delete the branch and the master repo will still be
 intact.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\start_of_appendix
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{landscape}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Big Picture
\begin_inset CommandInset label
LatexCommand label
name "sec:Big-Picture"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename input/Hello-world-econ.pdf
	display false
	scale 70

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{landscape}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Windows installation screenshots
\begin_inset CommandInset label
LatexCommand label
name "sec:Windows-installation-screenshots"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Windows installation options
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "30text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename input/git1.PNG
	lyxscale 50
	scale 35

\end_inset


\end_layout

\end_inset

 
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "30text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename input/git2.PNG
	lyxscale 50
	scale 35

\end_inset


\end_layout

\end_inset

 
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "30text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename input/git3.PNG
	lyxscale 50
	scale 35

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "30text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename input/git4.PNG
	lyxscale 50
	scale 35

\end_inset


\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "30text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename input/git5.PNG
	lyxscale 50
	scale 35

\end_inset


\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "30text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename input/git6.PNG
	lyxscale 50
	scale 35

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "30text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename input/git7.PNG
	lyxscale 50
	scale 35

\end_inset


\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "30text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename input/git8.PNG
	lyxscale 50
	scale 35

\end_inset


\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "30text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename input/git9.PNG
	lyxscale 50
	scale 35

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 6cm
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "45text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename input/git10.PNG
	lyxscale 50
	scale 35

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Useful links
\end_layout

\begin_layout Standard
Here is a list of helpful online tutorials:
\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "Git & GitHub Crash Course For Beginners"
target "https://www.youtube.com/watch?v=SWYqp7iY_Tc"
literal "false"

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "Git Basics: Merge and Rebase"
target "https://www.youtube.com/watch?v=dO9BtPDIHJ8"
literal "false"

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "Git Handout - Houtan Bastani"
target "http://www.dynare.org/houtan/handouts/git_1_new_with_smartgit.pdf"
literal "false"

\end_inset


\end_layout

\end_body
\end_document
