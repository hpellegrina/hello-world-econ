#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{setspace}
\usepackage[bottom]{footmisc}
\usepackage{amsfonts}
\usepackage{pdflscape}
\usepackage{amsmath}
\usepackage{array}
\usepackage{bm}
\usepackage{mathptmx}
\usepackage{setspace}

\DeclareMathOperator{\sgn}{sgn}
\DeclareMathOperator{\Var}{Var}
\DeclareMathOperator{\Corr}{Corr}
\DeclareMathOperator{\Cov}{Cov}
\DeclareMathOperator{\E}{E}
\DeclareMathOperator{\logit}{logit}
\DeclareMathOperator{\I}{I}

\DeclareMathOperator*{\argmax}{arg\,max} 

\definecolor{blue}{RGB}{40, 50, 180}
\usepackage[noindentafter]{titlesec}
\end_preamble
\use_default_options true
\begin_modules
theorems-std
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "times" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family rmdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing onehalf
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\pdf_quoted_options "linkcolor=blue, urlcolor=blue, citecolor=blue"
\papersize custom
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plainnat
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
A Brief Introduction to GitHub for Social Scientists using Stata and Dropbox
\begin_inset Foot
status open

\begin_layout Plain Layout
The purpose of this material is to serve just as an introduction to Github.
 I hope that this material can be useful for Social Scientists who are trying
 to integrate Github with Dropbox for the first time.
 This document should not be considered as representative of high standards
 of project management! For an advanced template of project management using
 GitHub, see the material here 
\begin_inset CommandInset href
LatexCommand href
name "click here"
target "https://github.com/gslab-econ/template"
literal "false"

\end_inset

.
 I thank Yaw Nyarko, Andres Fajardo and Martin Smith for comments.
 Contact: heitor.pellegrina@nyu.edu
\end_layout

\end_inset


\end_layout

\begin_layout Author
Heitor S.
 Pellegrina
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
GitHub is a widely used online platform that computer scientists use to
 keep track of their codes and to collaborate on their projects.
 The word GitHub is the combination of Git with Hub.
 Git is a version control system that stores all the history of a code.
 With Git, programmers can check what they changed in their codes and when
 they changed their codes.
 They can also restore previous versions of their projects if they do not
 like their new versions.
 GitHub is a web-based repository that keeps all the history of a code on
 a cloud using the Git system.
 Since everything is in a cloud, it allows many researchers to colaborate
 on a specific project.
\end_layout

\begin_layout Subsection
Why should I use GitHub+Dropbox instead of just using Dropbox?
\end_layout

\begin_layout Standard
\noindent
Dropbox is a great resource for teamwork.
 It allows many people to work on the same project and everything is automatical
ly synchronized across computers.
 However, as projects expand in terms of size and collaborators, one may
 run into problems.
 First, if you have used Dropbox to work with many collaborators you probably
 noticed the generation of 
\begin_inset Quotes eld
\end_inset

conflict
\begin_inset Quotes erd
\end_inset

 copies.
 This happens when Dropbox is not sure which version it should use because
 there is more than one synchronization happening at the same time.
 As I explain below, GitHub tends to avoid this problem because files are
 not automatically synchronized.
 Second, Dropbox lacks a more sophisticated system to track what changes
 in each version of a code.
 If something changes, we do not know who changed a code and what exactly
 they changed in it.
 GitHub has an interface that makes it easy to identify these changes.
 Third, if you want to bring back previous versions of a project, GitHub
 can do it quickly, but with Dropbox, we can only bring back specific files
 one at a time.
 While some of these problems may be more likely to appear in large projects
 (imagine writing the codes for facebook for example...), as big empirical
 projects become more frequent in Economics, I believe that the use of Github
 will inevitably become more frequent as well.
 The main cost of using GitHub is that you have to be much more systematic
 about the way how you work since you have to manually synchronize your
 changes with the cloud.
\end_layout

\begin_layout Subsection
What is the difference between Dropbox and GitHub?
\end_layout

\begin_layout Standard
For me, the main difference between Dropbox and GitHub is that now we have
 an intermediary step for the synchronization of files called
\emph on
 
\begin_inset Quotes eld
\end_inset

commit
\begin_inset Quotes erd
\end_inset


\emph default
.
 In Dropbox, we have
\begin_inset Formula 
\begin{align*}
\text{Master Repo (on the web)} & \iff\text{Local Repo (in your computer)},
\end{align*}

\end_inset

where Master Repository is the cloud where the codes are and local repository
 is a copy of the Master Repository that you keep in your computer.
 If someone changes something in their Local Repository, things are automaticall
y synchronized with the Master Repository and across all the Local Repositories
 of other researchers working on the project.
 Therefore, if someone makes a mistake, this mistake spreads across the
 project and there is no straighforward way of identifying this mistake
 and going back to previous versions of the project.
 Now, with Git, we have an intermediary step
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\text{Master Repo (on the web)}\iff\text{Commit}\iff\text{Local Repo (in your computer)},
\]

\end_inset

The way how synchronization works with Github is as follows.
 You first download all the repository that cointains the codes for the
 project to your computer.
 If it is the first time that you are downloading a project, you use a process
 called 
\emph on

\begin_inset Quotes eld
\end_inset

clone
\begin_inset Quotes erd
\end_inset

.

\emph default
 If you are just updating the project to your local repo, you use a process
 called 
\emph on

\begin_inset Quotes eld
\end_inset

Pull
\begin_inset Quotes erd
\end_inset


\emph default
.
 Both are essentially downloading the files from the cloud.
 After you make your changes to the files, you can then upload them to this
 intermediary step called commit using a process called
\emph on
 
\begin_inset Quotes eld
\end_inset

add
\begin_inset Quotes erd
\end_inset


\emph default
.
 Once you added everything that you want, you use a process called 
\begin_inset Quotes eld
\end_inset

commit
\begin_inset Quotes erd
\end_inset

, which basically packages all the 
\begin_inset Quotes eld
\end_inset


\emph on
adds
\emph default

\begin_inset Quotes erd
\end_inset

 that you made.
 You can upload this commit to the cloud using a process called 
\begin_inset Quotes eld
\end_inset


\emph on
Push
\emph default

\begin_inset Quotes erd
\end_inset

.
 GitHub keeps track of all the versions of the project.
 If someone makes a mistake, we can easily go back to the version of the
 project that existed before the mistake.
\end_layout

\begin_layout Standard

\series bold
See the Big Picture in the Appendix A to get a sense of how this will work!
\end_layout

\begin_layout Subsection
Can I use GitHub as a repository for my datasets?
\end_layout

\begin_layout Standard
GitHub is a tool for keeping track of codes, but it is not supposed to be
 a repository for datasets.
 This is where an integration of Dropbox with Github is useful.
 GitHub can keep track of the codes that are written for a project, and
 we can leave the datasets and output of the project (figures, tables and
 pdfs) untracked.
 For example, a researcher can keep track of do-files that clean the data,
 but only keep the final version of the cleaned dataset.
 The idea is that, by keeping track of the code, we can always go back to
 previous versions of the project and re-obtain previous versions of the
 cleaned dataset.
\end_layout

\begin_layout Subsection
Prerequisites for this manual
\end_layout

\begin_layout Standard
Before you move forward, make sure that you do the following
\end_layout

\begin_layout Itemize
Go to GitHub and set up an account (
\begin_inset CommandInset href
LatexCommand href
name "click here"
target "https://github.com/"
literal "false"

\end_inset

).
\end_layout

\begin_layout Itemize
Follow their introduction guide.
\end_layout

\begin_layout Itemize
Go to Git website and install git (
\begin_inset CommandInset href
LatexCommand href
name "click here"
target "https://git-scm.com/book/en/v2/Getting-Started-Installing-Git"
literal "false"

\end_inset

).
\end_layout

\begin_layout Subsubsection*
Installing Git on Windows
\end_layout

\begin_layout Standard
After downloading the installation file, execute the installer and leave
 the default options in every step 
\series bold
except the last one.
 
\series default
At this point, check the option 
\begin_inset Quotes eld
\end_inset

Enable symbolic links.
\begin_inset Quotes erd
\end_inset

 Screen shots of this manual's recommended installing options are available
 below in Appendix A.
\end_layout

\begin_layout Section
Synchronization using GitHub
\end_layout

\begin_layout Standard
There are two ways to synchronize your files with the master repository.
 First, you can use a software called GitHub Desktop.
 This is a software where you can 
\begin_inset Quotes eld
\end_inset

point-and-click
\begin_inset Quotes erd
\end_inset

 your way through synchronization.
 I found this software quite user friendly.
 Second, you can use the Terminal in Mac
\begin_inset Foot
status open

\begin_layout Plain Layout
If you are using a Mac computer and do not know what Terminal is, read this
 website 
\begin_inset CommandInset href
LatexCommand href
name "here"
target "https://www.macworld.co.uk/how-to/mac-software/how-use-terminal-on-mac-3608274/"
literal "false"

\end_inset

.
\end_layout

\end_inset

 (or the command line in windows).
 They may seem scary at first, but, in practice, you do not have to be a
 sophisticated programmer to use it.
 There are just a few commands that you have to use for your daily work.
 I see two main benefits in learning how to actually type the commands in
 Terminal.
 First, whenever you want to do something specific and you google about
 it, the answers that you get are mostly based on command lines.
 Therefore, to understand the answers that are given by the online community,
 you need to have a basic understanding of the language that they use.
 Second, there are some functionalities that I was not able to obtain with
 the graphical interface.
\end_layout

\begin_layout Subsubsection*
Terminal use in Windows
\end_layout

\begin_layout Standard
After installing Git with the options mentioned above, you can use Git BASH
 to work with the same commands you would use if you were in a *NIX terminal.
 When this manual asks you to use 'the terminal', you should use Git BASH.
 There will be warnings when different commands are needed if working on
 a Windows machine.
\end_layout

\begin_layout Subsection
Basic commands (MAC)
\end_layout

\begin_layout Itemize

\emph on
ls 
\emph default
(this command will 
\series bold
list
\series default
 the files in the current directory)
\end_layout

\begin_layout Itemize

\emph on
cd Dropbox
\emph default
 (this command will change the 
\series bold
current directory
\series default
 and enter the folder called 
\begin_inset Quotes eld
\end_inset

Dropbox
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Itemize

\emph on
cd ..
 
\emph default
(this will go a folder back in the hierarchy of folders)
\end_layout

\begin_layout Itemize

\emph on
mkdir projects-git 
\emph default
(this command will 
\series bold
make a directory 
\series default
called projects-git)
\end_layout

\begin_layout Itemize

\emph on
git clone https://github.com/hpellegrina/hello-world 
\emph default
(this command will make a clone of the online repository called hello-world
 to the current directory in your terminal)
\end_layout

\begin_layout Itemize

\emph on
git add table_1_summary_stat.do 
\emph default
(this command will add the do.file called 
\emph on
table_1_summary_stat.do
\emph default
 to the commit that you are preparing)
\end_layout

\begin_layout Itemize

\emph on
git remove table_1_summary_stat.do 
\emph default
(this command will remove 
\emph on
table_1_summary_stat.do
\emph default
 from the commit)
\end_layout

\begin_layout Itemize

\emph on
git add -A
\emph default
 
\emph on
-m 
\begin_inset Quotes eld
\end_inset

Adding all files
\begin_inset Quotes erd
\end_inset


\emph default
 (this command 
\series bold
adds
\series default
 to the commit all the new files that you have and creates a 
\series bold
message
\series default
 associated with the commit saying 
\begin_inset Quotes eld
\end_inset

Adding all files
\begin_inset Quotes erd
\end_inset

)
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
When you are looking throught the commits of a project, you can see the
 list of commits and the messages associated with each of them
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\emph on
git commit -m 
\begin_inset Quotes eld
\end_inset

Adding table_1_summary_stat.do
\begin_inset Quotes erd
\end_inset

 
\emph default
(this command will commit the changes that you made to the folder, the phrase
 inside the quotation marks is the comment that you are going to attach
 to your commit)
\end_layout

\begin_layout Itemize

\emph on
git push 
\emph default
(this command will 
\series bold
push
\series default
 the commit that you prepared that is still in your computer to the git
 cloud)
\end_layout

\begin_layout Itemize

\emph on
git pull 
\emph default
(this command will 
\series bold
pull
\series default
 the current version of the project to your desktop)
\end_layout

\begin_layout Itemize

\emph on
git status 
\emph default
(will show you the modifications/deletions that you made in your local repo)
\end_layout

\begin_layout Subsection
How a typical day of work looks like?
\end_layout

\begin_layout Itemize
You start by going to the directory on the desktop where the project is
 located using the terminal.
 You then type 
\emph on
git pull
\emph default
 to update the directory with everything that everybody else may have changed.
 
\end_layout

\begin_layout Itemize
You make all the changes in the directory related to your task.
\end_layout

\begin_layout Itemize
You type 
\emph on
git add -A 
\emph default
to add all the changes that you made to your branch.
\end_layout

\begin_layout Itemize
You commit the changes using 
\emph on
git commit - m 
\begin_inset Quotes eld
\end_inset

Issue 7: added table_1_summary_stat.do
\begin_inset Quotes eld
\end_inset

 
\end_layout

\begin_layout Itemize
You type 
\emph on
git push
\emph default
.
\end_layout

\begin_layout Section
Hello-World! I'm an Economist! (.gitignore version)
\end_layout

\begin_layout Standard
We will be following the tradition in computer science.
 Below you will have your first commits using GitHub, Stata and Dropbox.
 I taylored this commits to include some of the tricks to integrate Dropbox
 with GitHub.
\end_layout

\begin_layout Subsection
Exercise #0 - Getting started.
\end_layout

\begin_layout Standard
In this exercise you will set things up so that you have access to the files
 needed for the subsequent exercises.
\end_layout

\begin_layout Enumerate
Before you start, make sure that you have a GitHub account and that you
 have installed Git into your machine.
 To double check that it is installed properly, go to terminal and type
 the following command.
 If it is already installed, it will show a list of commands that you can
 use.
\begin_inset listings
lstparams "basicstyle={\ttfamily}"
inline false
status open

\begin_layout Plain Layout

$ git
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Link git to your GitHub account.
\begin_inset listings
lstparams "basicstyle={\ttfamily}"
inline false
status open

\begin_layout Plain Layout

$ git config --global user.email your@email.address
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Make a copy of 
\series bold
hello-world-econ 
\series default
into your computer.
 This is just to give you access to the files needed for this manual.
\begin_inset listings
lstparams "basicstyle={\ttfamily}"
inline false
status open

\begin_layout Plain Layout

$ cd /sample/path/for/files
\end_layout

\begin_layout Plain Layout

$ git clone https://github.com/hpellegrina/hello-world-econ
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
There is a folder called 
\series bold
my-hello-world-econ-shared 
\series default
in 
\series bold
hello-world-econ.

\series default
 Copy this folder into your Dropbox folder.
 This is the folder you will use to share data, documentation, etc., with
 your collaborators.
\end_layout

\begin_layout Subsection
Exercise #1 - Using GitHub to track codes.
\end_layout

\begin_layout Standard
Remember the big picture: you are interested in GitHub because you want
 to track the changes made to your project's codes.
 In this exercise you will use GitHub to track the codes of a new project:
\series bold
 my-hello-world-econ
\series default
.

\series bold
 
\series default
Specifically, you will (1) create a remote repository of your project in
 GitHub, (2) configure git so that that it only tracks your codes, (3) set
 up a local repository to work on your project, and (3) learn how to upload
 local changes to the online repository.
 
\end_layout

\begin_layout Enumerate
Go to 
\begin_inset CommandInset href
LatexCommand href
name "github.com"
target "https://github.com"
literal "false"

\end_inset

and create a repository called 
\series bold
my-hello-world-econ.
\end_layout

\begin_layout Enumerate
Click on 'Create new file' to create a file called 
\series bold
.gitignore 
\series default
with the content below.
 Note that (1) this file should be in the main folder of your project, (2)
 the dot at the beginning of the name should be included, and (3) lines
 that start with '#' are comments.
 After creating the file, click on 'Commit changes to the master branch'.
 
\begin_inset listings
lstparams "basicstyle={\ttfamily}"
inline false
status open

\begin_layout Plain Layout

1.
 # Ignore everything (in the main folder)...
\end_layout

\begin_layout Plain Layout

2.
 /*
\end_layout

\begin_layout Plain Layout

3.
 # Except README.md, .gitignore, Stata do-files, Python scripts and Matlab
 codes
\end_layout

\begin_layout Plain Layout

4.
 !README.md
\end_layout

\begin_layout Plain Layout

5.
 !.gitignore
\end_layout

\begin_layout Plain Layout

6.
 !*.do
\end_layout

\begin_layout Plain Layout

7.
 !*.py
\end_layout

\begin_layout Plain Layout

8.
 !*.m
\end_layout

\end_inset

 
\series bold
Important note: 
\series default
Changes made to 
\series bold
.gitignore 
\series default
will only apply to untracked files.
 If there are any files within these folders that git is already tracking,
 you will need to untrack them first.
 This can be the case if, for example, you already added a file to a commit.
 
\begin_inset CommandInset href
LatexCommand href
name "Here"
target "http://www.codeblocq.com/2016/01/Untrack-files-already-added-to-git-repository-based-on-gitignore/"
literal "false"

\end_inset

 is an example of how to go around this issue.
\end_layout

\begin_layout Enumerate
Open a terminal window and use the following commands to create a local
 copy of your repository.
 This will create a folder called 
\series bold
my-hello-world-econ
\series default
 in your computer.
\begin_inset listings
lstparams "basicstyle={\ttfamily}"
inline false
status open

\begin_layout Plain Layout

$ cd /sample/path/for/your/project
\end_layout

\begin_layout Plain Layout

$ git clone https://github.com/yourusername/my-hello-world-econ
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
There is a
\series bold
 my-hello-world-econ-contents
\series default
 folder in 
\series bold
hello-world-econ
\series default
 (the repository you copied in Exercise #0).
 Copy the 
\bar under
contents
\bar default
 of this folder into 
\series bold
my-hello-world-econ
\series default
.
 Your local project folder should now have two subfolders: 
\series bold
analysis 
\series default
and 
\series bold
data
\series default
.
\end_layout

\begin_layout Enumerate
The files you just added to 
\series bold
my-hello-world-econ
\series default
 are local changes you made to the project.
 You will now update your online repository so that it incorporates these
 changes.
 To do so, you need to select (stage) the changed files you wish to update
 into a bundle (commit) that you will then upload (push) to the online repositor
y.
 Let's start by staging the files to the commit.
 With the second command below you can check if the changes were added to
 the commit.
 
\begin_inset listings
lstparams "basicstyle={\ttfamily}"
inline false
status open

\begin_layout Plain Layout

$ git add -A
\end_layout

\begin_layout Plain Layout

$ git status
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Now, create a commit and add a comment that explains what changes are being
 made.
\begin_inset listings
lstparams "basicstyle={\ttfamily}"
inline false
status open

\begin_layout Plain Layout

$ git commit -m 
\begin_inset Quotes eld
\end_inset

Copied the contents of my-hello-world-econ-contents
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Push the commit to the online repository.
 You will be asked to input your GitHub credentials at this point.
 
\begin_inset listings
lstparams "basicstyle={\ttfamily}"
inline false
status open

\begin_layout Plain Layout

$ git push
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Go to 
\begin_inset CommandInset href
LatexCommand href
name "github.com"
target "https://github.com"
literal "false"

\end_inset

 and check that the changes are now displayed in your online repository.
\end_layout

\begin_layout Subsection
Exercise # 2 - Using Dropbox to access data inputs.
\end_layout

\begin_layout Standard
Remember the big picture: you are interested in Dropbox because it allows
 you to share files with collaborators in one place.
 You're not interested in the history of these files because they are either
 static (e.g.
 raw data, documentation, related papers) or they can be replicated by running
 the code that produced them in the first place (e.g.
 output tables from a do-file or pdf files from latex code).
 In this exercise, you will work with your first data input: 
\series bold
macro_indicators.csv
\series default
.
 A collaborator uploaded this file to 
\series bold
my-hello-world-econ-shared
\series default
, the project's shared Dropbox folder you copied in Exercise #0.
\end_layout

\begin_layout Enumerate
As always, you must start by updating your local repository to download
 (fetch and rebase) any changes made to the online repository.
 You will check before that you're standing on the 'master' branch.
 If you're not, the third line of code below will take you to that branch.
\begin_inset Foot
status open

\begin_layout Plain Layout
Later on we will talk about branches! See 
\begin_inset CommandInset href
LatexCommand href
name "this"
target "http://www.dynare.org/houtan/handouts/git_1_new_with_smartgit.pdf"
literal "false"

\end_inset

 for a discussion on pull vs fetch and rebase.
 
\end_layout

\end_inset


\begin_inset listings
lstparams "basicstyle={\ttfamily}"
inline false
status open

\begin_layout Plain Layout

$ cd your/path/to/my-hello-world-econ
\end_layout

\begin_layout Plain Layout

$ git branch
\end_layout

\begin_layout Plain Layout

$ git checkout master
\end_layout

\begin_layout Plain Layout

$ git fetch
\end_layout

\begin_layout Plain Layout

$ git rebase origin/master
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
You will now 'connect' to the data input.
 Go to the folder 
\series bold
macro
\series default
 in your project's data folder and create a symbolic link called 
\series bold
input
\series default
.
 This link must point to the folder in 
\series bold
my-hello-world-econ-shared
\series default
 that contains the file 
\series bold
macro_indicators.csv.
 
\series default
If you are using MacOS or *NIX, use the following commands in the terminal.
\begin_inset listings
lstparams "basicstyle={\ttfamily}"
inline false
status open

\begin_layout Plain Layout

$ cd your/path/to/my-hello-world-econ/data/macro
\end_layout

\begin_layout Plain Layout

$ ln -s path/to/Dropbox/my-hello-world-econ-shared/macro input
\end_layout

\end_inset

 If you're using Windows, 
\bar under
open the Command Prompt as an administrator (not Git BASH)
\bar default
 and use the following commands.
\begin_inset listings
lstparams "basicstyle={\ttfamily}"
inline false
status open

\begin_layout Plain Layout

>> cd your/path/to/my-hello-world-econ/data/macro
\end_layout

\begin_layout Plain Layout

>> mklink /D input /path/to/Dropbox/my-hello-world-econ-shared-macro
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Open the file 
\series bold
import_macro_data.do 
\series default
and edit the path in the third line so that it points to 
\series bold
my-hello-world-econ/data/macro/code
\series default
.
 Save and run the do-file.
\begin_inset listings
lstparams "basicstyle={\ttfamily}"
inline false
status open

\begin_layout Plain Layout

1.
 clear all
\end_layout

\begin_layout Plain Layout

2.
 * Write down the directory below
\end_layout

\begin_layout Plain Layout

3.
 cd "your/path/to/my-hello-world-econ/data/macro/code"
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Open the file 
\series bold
fig_va_urbanization.do 
\series default
and edit the path in the third line so that it points to 
\series bold
my-hello-world-econ/analysis/code
\series default
.
 Save and run the do-file.
\begin_inset listings
lstparams "basicstyle={\ttfamily}"
inline false
status open

\begin_layout Plain Layout

1.
 clear all
\end_layout

\begin_layout Plain Layout

2.
 * Write down the directory below
\end_layout

\begin_layout Plain Layout

3.
 cd "your/path/to/my-hello-world-econ/analysis/code"
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
The codes you just ran added files to 
\series bold
my-hello-world-econ
\series default
.
 You will now upload (push) the changes you have made to the do-files, and
 check that the files they created are not uploaded to your online repository.
\begin_inset listings
lstparams "basicstyle={\ttfamily}"
inline false
status open

\begin_layout Plain Layout

$ git add -A
\end_layout

\begin_layout Plain Layout

$ git status
\end_layout

\begin_layout Plain Layout

$ git commit -m 
\begin_inset Quotes eld
\end_inset

Changed path in fig_va_urbanization.do
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Plain Layout

$ git push
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Go to 
\begin_inset CommandInset href
LatexCommand href
name "github.com"
target "https://github.com"
literal "false"

\end_inset

 and check that the changes in the online repository only include those
 made to the do-files.
\end_layout

\begin_layout Section
Additional Features for Teamwork
\end_layout

\begin_layout Subsection
Adding collaborators
\end_layout

\begin_layout Standard
To add collaborators into your GitHub repository, you can just use the github.com
 website.
 
\end_layout

\begin_layout Itemize
Click on the repository of the project.
 
\end_layout

\begin_layout Itemize
Click on the settings of the repository (one of the tabs on the top).
\end_layout

\begin_layout Itemize
Click on collaborators.
\end_layout

\begin_layout Itemize
Type the email of you collaborator and add him/her there.
\end_layout

\begin_layout Subsection
Issues
\end_layout

\begin_layout Standard
A useful tool for the organization of tasks in GitHub is the use of 
\begin_inset Quotes eld
\end_inset

Issues
\begin_inset Quotes erd
\end_inset

.
 Any collaborator in a project can create a new issue on the website associated
 with a repository and link their commits with these issues.
 For example, one can go to a repository and create an issue such as 
\begin_inset Quotes eld
\end_inset

Add clustered standard errors in table 1
\begin_inset Quotes erd
\end_inset

.
 When the issue is created it comes with a number.
 Let's say this number is 1.
 When someone in the project commits something related to the issue, this
 person can directly link his commit with the issue by writing in the beginning
 of the message #1.
 When you do so, the website will display a small notification under the
 issue with the user who updated the issue and also what was added there.
 You can also assign issues to specific people in the project.
 
\end_layout

\begin_layout Subsection
Branches
\end_layout

\begin_layout Standard
Another useful tool for teamwork is the creation of branches.
 Let's say that you want to test the results from your paper using a restricted
 sample, but you do not want to affect your current results because it is
 possible that the restricted sample contains problems that you may find
 while working on it.
 In this case, you can create a 
\begin_inset Quotes eld
\end_inset


\emph on
branch
\emph default

\begin_inset Quotes erd
\end_inset

.
 This is a parallel repo on the cloud that your co-authors can use.
 In that case, we have
\begin_inset Formula 
\begin{align*}
\text{Master Repo (on the web)} & \iff\text{Commit}\iff\text{Local Repo (in your computer)}\\
\uparrow\downarrow\\
\text{Branch Repo (on the web)} & \iff\text{Commit}\iff\text{Local Repo (in your computer)}
\end{align*}

\end_inset

If the new sample works well, you may merge the branch with the master repo.
 If not, you can just delete the branch and the master repo will still be
 intact.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
\start_of_appendix
Big Picture
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename input/bigpicture.png
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Boxes represent folders and their contents.
 Yellow folders are synced with GitHub unless they are grey, which means
 their contents are ignored by git.
 Light blue folders are stored in Dropbox.
 Arrows represent symbolic links.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Windows installation screenshots
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Windows installation options
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "30text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename input/git1.PNG
	lyxscale 50
	scale 35

\end_inset


\end_layout

\end_inset

 
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "30text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename input/git2.PNG
	lyxscale 50
	scale 35

\end_inset


\end_layout

\end_inset

 
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "30text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename input/git3.PNG
	lyxscale 50
	scale 35

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "30text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename input/git4.PNG
	lyxscale 50
	scale 35

\end_inset


\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "30text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename input/git5.PNG
	lyxscale 50
	scale 35

\end_inset


\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "30text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename input/git6.PNG
	lyxscale 50
	scale 35

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "30text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename input/git7.PNG
	lyxscale 50
	scale 35

\end_inset


\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "30text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename input/git8.PNG
	lyxscale 50
	scale 35

\end_inset


\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "30text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename input/git9.PNG
	lyxscale 50
	scale 35

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 6cm
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "45text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename input/git10.PNG
	lyxscale 50
	scale 35

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Useful links
\end_layout

\begin_layout Standard
Here is a list of helpful online tutorials:
\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "Git & GitHub Crash Course For Beginners"
target "https://www.youtube.com/watch?v=SWYqp7iY_Tc"
literal "false"

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "Git Basics: Merge and Rebase"
target "https://www.youtube.com/watch?v=dO9BtPDIHJ8"
literal "false"

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "Git Handout - Houtan Bastani"
target "http://www.dynare.org/houtan/handouts/git_1_new_with_smartgit.pdf"
literal "false"

\end_inset


\end_layout

\end_body
\end_document
